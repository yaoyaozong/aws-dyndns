#!/bin/bash
set -u

function usage() {
	cat >&2 << EOF
Usage  : $0 DNS_FQDN DNS_TTL AWS_ZONE_ID RECHECK_SECS
Example: $0 test.example.com 5 Z148QEXAMPLE8V 30
EOF
	exit 1
}

function validate_ip() {
	#[[ $1 =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]
	[[ $1 =~ ^([0-9a-fA-F]{0,4}:){1,7}[0-9a-fA-F]{0,4}$ ]]
}

[ "$#" -eq 4 ] || usage

DNS_FQDN="$1"; shift
DNS_TTL="$1"; shift
AWS_ZONE_ID="$1"; shift
REFRESH_TIME="$1"; shift

OLD_IP=""
TS=0

while [ 1 ] ; do
	sleep "${TS}s"
	TS="$REFRESH_TIME" # first run is without a sleep

	OLD_IP="$(dig AAAA +short "$DNS_FQDN")"
	NEW_IP="$(curl -6 --interface ens19 -sS --max-time 5 ifconfig.io)"

	if ! validate_ip "$OLD_IP" ; then
		echo "Invalid OLD_IP: $OLD_IP"
		continue
	fi
	if ! validate_ip "$NEW_IP" ; then
		echo "Invalid NEW_IP: $NEW_IP"
		continue
	fi

	if [ "$OLD_IP" == "$NEW_IP" ]; then
		echo "No IP change detected: $OLD_IP"
		continue
	fi

	# UPSERT: http://docs.aws.amazon.com/Route53/latest/APIReference/API_ChangeResourceRecordSets.html

	# http://stackoverflow.com/questions/1167746/how-to-assign-a-heredoc-value-to-a-variable-in-bash
	read -r -d '' JSON_CMD << EOF
	{
		"Comment": "DynDNS update",
		"Changes": [
			{
				"Action": "UPSERT",
				"ResourceRecordSet": {
					"Name": "$DNS_FQDN.",
					"Type": "AAAA",
					"TTL": $DNS_TTL,
					"ResourceRecords": [
						{
							"Value": "$NEW_IP"
						}
					]
				}
			}
		]
	}
EOF

	echo "Updating IP to: $NEW_IP ($DNS_FQDN); OLD=$OLD_IP"

	aws route53 change-resource-record-sets \
		--hosted-zone-id "$AWS_ZONE_ID" --change-batch "$JSON_CMD"

	# XXX: No "get-change" is performed.
	# We update at most every 30 seconds.
	# Enough time for the AWS Route 53 changes to propagate.

	echo "Done. Request sent to update IP to: $NEW_IP ($DNS_FQDN)"
done
